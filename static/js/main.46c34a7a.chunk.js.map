{"version":3,"sources":["components/profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItemStyle.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/profile/Profile.jsx","components/Statistics/random-color.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","profileStyles","Description","src","alt","Avatar","Name","Tag","Location","Stats","Label","Quantity","followers","views","likes","r","Math","floor","random","g","b","Statistics","title","StatisticsStyle","Title","map","stat","Item","key","id","style","backgroundColor","color","label","Percentage","percentage","defaultProps","FriendListItem","isOnline","FriendListItemStyle","StatusIsOnline","StatusIsOfline","width","prototype","PropTypes","string","isRequired","bool","FriendList","friends","FriendListStyle","friend","arrayOf","shape","TransactionHistory","items","TransactionHistoryStyles","Thead","Tbody","type","amount","currency","App","userArr","statisticsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46c34a7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3mL00\",\"Description\":\"Profile_Description__3C4Yl\",\"Avatar\":\"Profile_Avatar__2mmXu\",\"Name\":\"Profile_Name__18uvu\",\"Tag\":\"Profile_Tag__3RpRa\",\"Location\":\"Profile_Location__2oaAR\",\"Label\":\"Profile_Label__1VTiW\",\"Stats\":\"Profile_Stats__8-oQZ\",\"Stats__item\":\"Profile_Stats__item__29abd\",\"Quantity\":\"Profile_Quantity__Q5_dv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__37EjA\",\"Title\":\"Statistics_Title__28YTK\",\"Item\":\"Statistics_Item__xSCHW\",\"stat-list\":\"Statistics_stat-list__rBlhx\",\"Label\":\"Statistics_Label__FbQUg\",\"Percentage\":\"Statistics_Percentage__2bJaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"FriendListItemStyle_Item__3maKv\",\"StatusIsOnline\":\"FriendListItemStyle_StatusIsOnline__1OqVj\",\"StatusIsOfline\":\"FriendListItemStyle_StatusIsOfline__2Rn75\",\"Avatar\":\"FriendListItemStyle_Avatar__1rb_K\",\"Name\":\"FriendListItemStyle_Name__Kp1pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__3jmZv\",\"Thead\":\"TransactionHistory_Thead__32gnF\",\"Tbody\":\"TransactionHistory_Tbody__3uvej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__1SYjv\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport profileStyles from './Profile.module.css';\r\n\r\nconst Profile = ({\r\n    name,\r\n    tag,\r\n    location,\r\n    avatar,\r\n    stats,\r\n}) => {\r\n    return (\r\n        <div className={profileStyles.Profile}>\r\n            <div className={profileStyles.Description}>\r\n                <img src={avatar} alt='user avatar' className={profileStyles.Avatar} />\r\n                <p className={profileStyles.Name}>{name}</p>\r\n                <p className={profileStyles.Tag}>@{tag}</p>\r\n                <p className={profileStyles.Location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={profileStyles.Stats}>\r\n            <li className={profileStyles['Stats__item']}>\r\n                <span className={profileStyles.Label}>Followers</span>\r\n                <span className={profileStyles.Quantity}>{stats.followers}</span>\r\n            </li>\r\n            <li className={profileStyles['Stats__item']}>\r\n                <span className={profileStyles.Label}>Views</span>\r\n                <span className={profileStyles.Quantity}>{stats.views}</span>\r\n            </li>\r\n            <li className={profileStyles['Stats__item']}>\r\n                <span className={profileStyles.Label}>Likes</span>\r\n                <span className={profileStyles.Quantity}>{stats.likes}</span>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number,\r\n        views: PropTypes.number,\r\n        likes: PropTypes.number,\r\n    }).isRequired,\r\n};\r\nexport default Profile;","export default () => {\r\n    let r = Math.floor(Math.random() * 256);\r\n    let g = Math.floor(Math.random() * 256);\r\n    let b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatisticsStyle from './Statistics.module.css';\r\nimport color from './random-color'\r\n\r\nconst Statistics = ({title, stats}) => {\r\nreturn (\r\n    <section className={StatisticsStyle.Statistics}>\r\n        {title && <h2 className={StatisticsStyle.Title}>Upload stats</h2>}\r\n        <ul className={StatisticsStyle['stat-list']}>\r\n        {stats.map((stat) => (\r\n            <li \r\n            className={StatisticsStyle.Item} key={stat.id} style={{backgroundColor: color() }}>\r\n                <span className={StatisticsStyle.Label}>{stat.label}</span>\r\n        <span className={StatisticsStyle.Percentage}>{stat.percentage}%</span>\r\n            </li>  \r\n            ))}\r\n        </ul>\r\n        </section>\r\n);\r\n};\r\nStatistics.defaultProps = {\r\n    title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\ntitle: PropTypes.string.isRequired,\r\nstats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired\r\n    }).isRequired,\r\n).isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItemStyle from '../FriendListItem/FriendListItemStyle.module.css';\r\n\r\nconst FriendListItem = ({avatar, name, isOnline}) => {\r\n    return (\r\n        <li className={FriendListItemStyle.Item}>\r\n            <span className={\r\n                isOnline ? FriendListItemStyle.StatusIsOnline : FriendListItemStyle.StatusIsOfline\r\n            }></span>\r\n            <img className={FriendListItemStyle.Avatar} src={avatar} alt='' width='48' />\r\n            <p className={FriendListItemStyle.Name}>{name}</p>\r\n        </li>\r\n    )\r\n}\r\nFriendListItem.prototype = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n};\r\nexport default FriendListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListStyle from './FriendList.module.css';\r\nimport FriendListItem from '../FriendListItem/FriendListItem'\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={FriendListStyle['friend-list']}>\r\n            {friends.map((friend) => (\r\n                <FriendListItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} key={friend.id} />\r\n\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nFriendList.prototype = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionHistoryStyles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n        <table className={TransactionHistoryStyles['transaction-history']}>\r\n            <thead className={TransactionHistoryStyles.Thead}>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className={TransactionHistoryStyles.Tbody}>\r\n                {items.map(({id, type, amount, currency}) => (\r\n                    <tr key={id}>\r\n                        <td>{type}</td>\r\n                        <td>{amount}</td>\r\n                        <td>{currency}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\nexport default TransactionHistory;","import React from 'react';\nimport Profile from './components/profile/Profile';\nimport userArr from './data/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticsData from './data/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport items from './data/transaction-history.json'\n\n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App() {\n  return (\n    <>\n<Profile\nname={userArr.name}\ntag={userArr.tag}\nlocation={userArr.location}\navatar={userArr.avatar}\nstats={userArr.stats}\n/>\n<Statistics title='upload stats' stats={statisticsData} />\n<FriendList friends={friends} />\n<TransactionHistory items={items} />\n</>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import './index.css';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}